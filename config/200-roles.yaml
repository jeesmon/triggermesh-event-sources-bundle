# Copyright 2021 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: triggermesh-controller
  namespace: triggermesh
  labels:
    app.kubernetes.io/part-of: triggermesh

rules:

# Record Kubernetes events
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
  - update

# Manage receive-adapters
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - get
  - list
  - watch

# Read reconciled TriggerMesh resources and update their statuses
- apiGroups:
  - sources.triggermesh.io
  resources:
  - awss3sources
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - sources.triggermesh.io
  resources:
  - awss3sources/status
  verbs:
  - update

# Ensure compatibility with the OwnerReferencesPermissionEnforcement Admission Controller
# https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
- apiGroups:
  - sources.triggermesh.io
  resources:
  - awss3sources/finalizers
  verbs:
  - update

# Set finalizers
- apiGroups:
  - sources.triggermesh.io
  resources:
  - awss3sources
  verbs:
  - patch

# Manage resource-specific ServiceAccounts and RoleBindings
- apiGroups:
  - ''
  resources:
  - serviceaccounts
  - serviceaccounts/finalizers
  verbs:
  - list
  - watch
  - create
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - list
  - watch
  - create

# Read credentials
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get

# Read controller configurations
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  verbs:
  - get

# Acquire leases for leader election
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

# Determine the exact reason why Deployments fail
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - list

---

# This role provides readonly access to "Source" duck types.
# All the rules it contains get aggregated into the "source-observer" Role provided by Knative Eventing.
# see https://github.com/knative/eventing/blob/release-0.26/docs/spec/sources.md#source-rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: triggermesh-source-observer
  namespace: triggermesh
  labels:
    app.kubernetes.io/part-of: triggermesh
    duck.knative.dev/source: 'true'
rules:
- apiGroups:
  - sources.triggermesh.io
  resources:
  - awss3sources
  verbs:
  - get
  - list
  - watch
